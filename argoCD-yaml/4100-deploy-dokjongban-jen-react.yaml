# 4100-deploy-dokjongban-jen-react.yaml
# Deployment → Rollout으로 전환 (Blue/Green)
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: dokjongban-jen-react
  namespace: default
  labels:
    domain: dokjongban-com
    app: dokjongban-jen-react
    app.kubernetes.io/managed-by: argocd
    app.kubernetes.io/instance: dokjongban-jen-react
  annotations:
    # ▼ 서비스/인그레스보다 나중에 적용되도록(서비스 wave=1, 인그레스 wave=0)
    argocd.argoproj.io/sync-wave: "2"
    kubernetes.io/change-cause: "Blue=Apache httpd, Green=nginx (Argo Rollouts Blue/Green)"
spec:
  replicas: 2
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: dokjongban-jen-react
  template:
    metadata:
      labels:
        domain: dokjongban-com
        app: dokjongban-jen-react
        app.kubernetes.io/instance: dokjongban-jen-react
    spec:
      # ▼ GHCR 시크릿은 공용이미지에도 무해하므로 유지
      imagePullSecrets:
        - name: ghcr-dockerconfig
      containers:
        - name: web
          # ▼ 초기 Blue: Apache httpd
          image: httpd:2.4-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          readinessProbe:
            httpGet: { path: "/", port: 80 }
            initialDelaySeconds: 3
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: "/", port: 80 }
            initialDelaySeconds: 10
            periodSeconds: 20
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"

  # ▼ Blue/Green 전략: active/preview 서비스로 트래픽 전환
  strategy:
    blueGreen:
      # 실서비스(고정): IngressRoute가 이 서비스만 바라봄
      activeService: dokjongban-jen-react-service
      # 프리뷰(사전검증): /jen-react-preview 경로로 확인
      previewService: dokjongban-jen-react-preview
      # 수동 승격(프로모션). 프리뷰 확인 후 승격하세요.
      autoPromotionEnabled: false
      # 노드 iptables 전파 지연 고려(기본 30)
      scaleDownDelaySeconds: 30
