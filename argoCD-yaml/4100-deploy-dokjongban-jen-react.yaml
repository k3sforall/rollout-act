# 4100-deploy-dokjongban-jen-react.yaml
# 목적: Argo Rollouts Blue/Green 전용 Rollout (초기 Blue=httpd)
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: dokjongban-jen-react
  namespace: default
  labels:
    domain: dokjongban-com
    app: dokjongban-jen-react
    app.kubernetes.io/managed-by: argocd
    app.kubernetes.io/instance: dokjongban-jen-react
  annotations:
    # 서비스/인그레스보다 나중에 생성되도록(ingress=0, svc=1, rollout=2)
    argocd.argoproj.io/sync-wave: "2"
    kubernetes.io/change-cause: "Blue=Apache httpd, Green=nginx (Argo Rollouts Blue/Green)"
spec:
  replicas: 2
  revisionHistoryLimit: 2
  progressDeadlineSeconds: 600
  selector:
    matchLabels:
      app: dokjongban-jen-react
  template:
    metadata:
      labels:
        domain: dokjongban-com
        app: dokjongban-jen-react
        app.kubernetes.io/instance: dokjongban-jen-react
    spec:
      # 사설 레지스트리 사용 시 필요(공용이미지에도 무해)
      imagePullSecrets:
        - name: ghcr-dockerconfig
      containers:
        - name: web
          # ★ 초기 Blue는 httpd로 시작 (프리뷰/승격 테스트용)
          image: httpd:2.4-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          readinessProbe:
            httpGet: { path: "/", port: 80 }
            initialDelaySeconds: 3
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: "/", port: 80 }
            initialDelaySeconds: 10
            periodSeconds: 20
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"

  # Blue/Green 전략: 프리뷰 확인 후 수동 승격
  strategy:
    blueGreen:
      activeService: dokjongban-jen-react-service     # 실서비스(/jen-react)
      previewService: dokjongban-jen-react-preview    # 프리뷰(/jen-react-preview)
      autoPromotionEnabled: false                     # 수동 승격
      scaleDownDelaySeconds: 30                       # 전환 후 구버전 축출 지연
